<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://megachar0x01.github.io/</id><title>Megachar0x01</title><subtitle>Blogs on CTF , Malware Analysis &amp; Binary exploitation</subtitle> <updated>2024-10-31T10:48:55+08:00</updated> <author> <name>Abdullah Shahbaz</name> <uri>https://megachar0x01.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://megachar0x01.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://megachar0x01.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 Abdullah Shahbaz </rights> <icon>//assets/img/favicons/favicon.ico</icon> <logo>//assets/img/favicons/favicon-96x96.png</logo> <entry><title>Single Note - Ignite khi qualifying 2024</title><link href="https://megachar0x01.github.io/posts/Single_Note/" rel="alternate" type="text/html" title="Single Note - Ignite khi qualifying 2024" /><published>2024-10-30T00:00:00+08:00</published> <updated>2024-10-30T00:00:00+08:00</updated> <id>https://megachar0x01.github.io/posts/Single_Note/</id> <content src="https://megachar0x01.github.io/posts/Single_Note/" /> <author> <name>megachar0x01</name> </author> <category term="Pwn" /> <category term="amd64" /> <category term="ctf" /> <summary> Purpose : Get The Flag Mitigations : Crash : Decompile : #!/usr/bin/python3 from pwn import * import struct # context.terminal = ['tmux','splitw','-h'] os.environ['XDG_CACHE_HOME'] = '/tmp/' context.log_level = 'error' info = lambda msg: log.info(msg) sla = lambda msg, data: io.sendlineafter(msg, data) sa = lambda msg, data: io.sendafter(msg, data) sl = lambda data: io.sendline(... </summary> </entry> <entry><title>BlackHat Qualifier cockatoo</title><link href="https://megachar0x01.github.io/posts/cockatoo_BlackHat_2024_Qualifier/" rel="alternate" type="text/html" title="BlackHat Qualifier cockatoo" /><published>2024-10-27T00:00:00+08:00</published> <updated>2024-10-27T00:00:00+08:00</updated> <id>https://megachar0x01.github.io/posts/cockatoo_BlackHat_2024_Qualifier/</id> <content src="https://megachar0x01.github.io/posts/cockatoo_BlackHat_2024_Qualifier/" /> <author> <name>megachar0x01</name> </author> <category term="Pwn" /> <category term="amd64" /> <category term="ctf" /> <summary> Purpose : Get The Flag #!/usr/bin/python3 from pwn import * import struct from ctypes import * import subprocess context.terminal = ['tmux','splitw'] os.environ['XDG_CACHE_HOME'] = '/tmp/' context.log_level = 'ERROR' # Allows you to switch between local/GDB/remote from terminal def start(argv=[], *a, **kw): if args.GDB: # Set GDBscript below return gdb.debug([exe] +... </summary> </entry> <entry><title>Cereberus 2024</title><link href="https://megachar0x01.github.io/posts/98ec204106d3e4d225d14217d9e16f106f5d8f0e3d1c8c1a3eb4d6184f7316d7/" rel="alternate" type="text/html" title="Cereberus 2024" /><published>2024-03-17T00:00:00+08:00</published> <updated>2024-03-17T21:32:32+08:00</updated> <id>https://megachar0x01.github.io/posts/98ec204106d3e4d225d14217d9e16f106f5d8f0e3d1c8c1a3eb4d6184f7316d7/</id> <content src="https://megachar0x01.github.io/posts/98ec204106d3e4d225d14217d9e16f106f5d8f0e3d1c8c1a3eb4d6184f7316d7/" /> <author> <name>megachar0x01</name> </author> <category term="Malware" /> <category term="Android" /> <summary> First, we begin with basic analysis. This involves checking its hash on VirusTotal and extracting hashes using HashMyFile. Checking on VirusTotal. After obtaining some hits, it’s time to invest more time in understanding its workings. While we can check for relations on VirusTotal, I prefer to handle the analysis independently from this point onward. Since the file type is apk, we can uti... </summary> </entry> <entry><title>Profile</title><link href="https://megachar0x01.github.io/posts/BlackHatSaudia_Qualifier_2023/" rel="alternate" type="text/html" title="Profile" /><published>2023-10-09T00:00:00+08:00</published> <updated>2023-10-09T00:00:00+08:00</updated> <id>https://megachar0x01.github.io/posts/BlackHatSaudia_Qualifier_2023/</id> <content src="https://megachar0x01.github.io/posts/BlackHatSaudia_Qualifier_2023/" /> <author> <name>megachar0x01</name> </author> <category term="Pwn" /> <category term="amd64" /> <category term="ctf" /> <summary> The variable age is declared as an integer, and a long integer is obtained from the user. This means that, as an attacker, we have the capability to overwrite the next 4 bytes in memory. These next 4 bytes correspond to a pointer to a character array. As we examine the code, it becomes apparent that this character pointer is used to store user input. Combining these observations, we possess the... </summary> </entry> <entry><title>V8 Internals Part 1</title><link href="https://megachar0x01.github.io/posts/Array/" rel="alternate" type="text/html" title="V8 Internals Part 1" /><published>2023-09-24T00:00:00+08:00</published> <updated>2023-09-25T20:48:21+08:00</updated> <id>https://megachar0x01.github.io/posts/Array/</id> <content src="https://megachar0x01.github.io/posts/Array/" /> <author> <name>megachar0x01</name> </author> <category term="Browser" /> <category term="v8" /> <summary> Pointer Compression Pointer Compression in V8 leverages a fascinating characteristic of heap-based objects, namely their proximity to one another. This proximity often results in a significant portion of the pointer having identical most significant bits. Exploiting this, V8 conserves memory by storing only the least significant bits of the pointer, while reserving the upper 32 bits (referred... </summary> </entry> </feed>
